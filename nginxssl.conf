user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
    multi_accept on;
}

http {
    sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 15;
	types_hash_max_size 2048;
	server_tokens off;
    client_max_body_size 64m;
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    include       mime.types;
    default_type  application/octet-stream;

    ##
	# Gzip Settings
	##

	gzip on;
    	gzip_disable "MSIE [1-6]\.(?!.*SV1)";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 8;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # catch all

    # CATCHALL http
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        root   /usr/local/nginx/html;
        index index.php index.html index.htm;
        include /etc/nginx/letsencrypt.conf;
    }

    # CATCHALL https
    server {
        listen 443 default_server;
        listen [::]:443 default_server;
        server_name _;
        root   /usr/local/nginx/html;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/www.comment.lol/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/keys/0000_key-certbot.pem;
        include /etc/nginx/cipherlist;
        include /etc/nginx/letsencrypt.conf;
        index index.php index.html index.htm;
    }

    # http -> https
    server {
        listen 80;
    	listen [::]:80;
    	server_name .comment.lol;
    	return 301 https://$host$request_uri;
    	include /etc/nginx/letsencrypt.conf;
    }

    # www.comment.lol -> comment.lol
    server {
    	listen 443 ssl http2;
        listen [::]:443 ssl http2;
    	server_name www.comment.lol;
        include /etc/nginx/cipherlist;
        include /etc/nginx/letsencrypt.conf;
    	ssl on;
    	ssl_certificate /etc/letsencrypt/live/www.comment.lol/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/keys/0000_key-certbot.pem;
    	location / {
    		return 301 https://comment.lol$request_uri;
    	}

    }

    # comment.lol
    server {
    	listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name  comment.lol;

        access_log /var/log/nginx/comment.lol.access.log;
        error_log /var/log/nginx/comment.lol.error.log;

        #charset koi8-r;

        ssl on;
        ssl_certificate /etc/letsencrypt/live/www.comment.lol/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/keys/0000_key-certbot.pem;
        include /etc/nginx/cipherlist;
        include /etc/nginx/letsencrypt.conf;

        #access_log  logs/host.access.log  main;

        root   /usr/local/nginx/html;
        index index.php index.html index.htm;
        autoindex off;

        location / {
		    #try_files $uri $uri/ /index.php?q=$uri&$args;
		    try_files $uri $uri/ @phpmagic;
	    }
	    
        location @phpmagic {
		    rewrite ^/(.+)$ /index.php?p=$1 last;
        }

        # pass the PHP scripts to FastCGI server listening on /run/php/php7.0-fpm.sock
        location ~ [^/]\.php(/|$) {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            fastcgi_param HTTP_PROXY "";
            fastcgi_pass   unix:/run/php/php7.0-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        }

        # Deny access to uploads that arenâ€™t images, videos, music, etc.
        location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
            deny all;
        }

        # Keep nosey people from discivering categories by number
	    location ~* /categories/([0-9]|[1-9][0-9]|[1-9][0-9][0-9])$ {
		    return 404;
        }

        # Deny, drop, or internal locations
	    location ~ /\. { access_log off; log_not_found off; deny all; }
	    location ~ ~$ { access_log off; log_not_found off; deny all; }
	    location = /robots.txt { access_log off; log_not_found off; }
	    location ^~ favicon { access_log off; log_not_found off; }
        location ^~ /conf/ { internal; }

        # Cache static files for as long as possible
        location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|cur)$ {
            expires max;
            log_not_found off;
            access_log off;
        }

        # Common sense
        location /xmlrpc.php {
            deny all;
        }

        location ~* wp-config.php { 
            deny all;
        }

        # Rate limit access to wp-login.php to block against brute force attacks.
        location = /wp-login.php {
            limit_req zone=one burst=1 nodelay;
            fastcgi_pass   unix:/run/php/php7.0-fpm.sock;
        }

        location ~* wp-settings.php {
            deny all;
        }

        location ~* /wp-includes/.*.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* /wp-content/.*.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # pagespeed stuff
        pagespeed on;
        pagespeed ModifyCachingHeaders on;
        pagespeed FileCachePath /var/ngx_pagespeed_cache;
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        #error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
