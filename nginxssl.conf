user  nginx;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  2;

    gzip  on;

    # http -> https
    server {
        listen 80;
    	listen [::]:80;
    	server_name .comment.lol;
    	return 301 https://$host$request_uri;
    	include /etc/nginx/letsencrypt;
    }

    # www.comment.lol -> comment.lol
    server {
    	listen 443;
    	listen [::]:443;
    	server_name www.comment.lol;
        include /etc/nginx/cipherlist;
        include /etc/nginx/letsencrypt;
    	ssl on;
    	#ssl_certificate /etc/letsencrypt/live/www.wordpress-site.com/fullchain.pem;
    	#ssl_certificate_key /etc/letsencrypt/live/www.wordpress-site.com/privkey.pem;
    	location / {
    		return 301 https://comment.lol$request_uri;
    	}

    }

    # comment.lol
    server {
        listen 443;
        listen [::]:443;
        server_name  comment.lol;

        #charset koi8-r;

        ssl on;
        #ssl_certificate /etc/letsencrypt/live/wordpress-site.com/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/wordpress-site.com/privkey.pem;
        include /etc/nginx/cipherlist;
        include /etc/nginx/letsencrypt;

        #access_log  logs/host.access.log  main;

        root   /usr/local/nginx/html;
        index index.php index.html index.htm;
        autoindex off;

        location / {
		    #try_files $uri $uri/ /index.php?q=$uri&$args;
		    try_files $uri $uri/ @phpmagic;
	    }
	    
        location @phpmagic {
		    rewrite ^/(.+)$ /index.php?p=$1 last;
        }

        # pass the PHP scripts to FastCGI server listening on /run/php/php7.0-fpm.sock
        location ~ [^/]\.php(/|$) {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            fastcgi_param HTTP_PROXY "";
            fastcgi_pass   unix:/run/php/php7.0-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        }

        # Stop things from executing in the uploads directory
    	location ~* ^/uploads/.*.(html|htm|shtml|php)$ {
    		types { }
    		default_type text/plain;
        }

        # Keep nosey people from discivering categories by number
	    location ~* /categories/([0-9]|[1-9][0-9]|[1-9][0-9][0-9])$ {
		    return 404;
        }

        # Deny, drop, or internal locations
	    location ~ /\. { access_log off; log_not_found off; deny all; }
	    location ~ ~$ { access_log off; log_not_found off; deny all; }
	    location = /robots.txt { access_log off; log_not_found off; }
	    location ^~ favicon { access_log off; log_not_found off; }
        location ^~ /conf/ { internal; }

        # Cache static files for as long as possible
        location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|cur)$ {
            expires max;
            log_not_found off;
            access_log off;
        }

        location /xmlrpc.php {
            deny all;
        }

        # Common sense
        location ~* wp-config.php { 
            deny all;
        }

        location ~* wp-settings.php {
            deny all;
        }

        location ~* /wp-includes/.*.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* /wp-content/.*.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # pagespeed stuff
        pagespeed on;
        pagespeed ModifyCachingHeaders on;
        pagespeed FileCachePath /var/ngx_pagespeed_cache;
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        #error_page  404              /404.html;
        
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
